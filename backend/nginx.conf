
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # the list of backend servers
    upstream backend {
        server localhost:5000 max_fails=1;
    }

    # HTTP server
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # static serve all files, otherwise return index.html
        location / {
            root   YOUR_BUILD_APPLICATION_ABS_LOCATION # Here goes the location of you built frontend application.
            try_files $uri /index.html;
        }

        # redirect all api request to the backend
        location /api {
            proxy_pass $scheme://backend$uri;
        }


        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root  YOUR_BUILD_APPLICATION_ABS_LOCATION; # Here goes the location of you built frontend application.
    #        try_files $uri /index.html;
    #    }

    #    location /api {
    #        proxy_pass $scheme://backend$uri;
    #    }
    #}
}
